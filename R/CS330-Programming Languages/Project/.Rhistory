abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R^2:", R2)
print(R2str)
title(sub = c(R2str))
file <- read.csv("mydata.csv", header = TRUE, check.names = FALSE)
columnNames <- colnames(file)
x_vals <- file[[1]]
y_vals <- file[[2]]
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R^2:", R2)
print(R2str)
title(sub = c(R2str))
title(sub = c(R2str, "\nabs"))
R2str <- paste("R^2:", R2)
print(R2str)
title(sub = c(R2str, "\nabs"))
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R^2:", R2)
print(R2str)
title(sub = c(R2str, "\nabs"))
title(sub = c(R2str, EQstr)
EQstr <- paste("\n", "\n")
title(sub = c(R2str, EQstr))
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R^2:", R2)
EQstr <- paste("\n", "\n")
title(sub = c(R2str, EQstr))
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R^2:", R2)
EQstr <- paste("\n", "\na")
title(sub = c(R2str, EQstr))
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R^2:", R2)
EQstr <- paste("\n", "\na")
title(sub = c(R2str, EQstr))
R2str <- paste("R^2:", R2)
EQstr <- paste("\n", "\na")
title(sub = R2str)
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R^2:", R2)
EQstr <- paste("\n", "\na")
title(sub = R2str)
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R^2:", R2)
EQstr <- paste("\n", "\na")
title(sub = R2str, "abc")
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R-Squared:", R2)
EQstr <- paste("\n", "\na")
title(sub = R2str, "abc")
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R-Squared:", R2)
EQstr <- paste("\n", "\na")
title(sub = R2str, "abc")
Coef <- summary(best_fit_line)$coefficients
print(coef)
coef <- summary(best_fit_line)$coefficients
print(coef)
coef <- summary(best_fit_line)$coefficients
print(coef$Estimate)
coef <- summary(best_fit_line)$coefficients
print(coef$estimate)
coef <- summary(best_fit_line)$coefficients
print(coef$x)
coef <- summary(best_fit_line)$coefficients
print(coef$x_vals)
coef <- summary(best_fit_line)$coefficients
print(coef[0])
coef <- summary(best_fit_line)$coefficients
print(coef[1])
coef <- summary(best_fit_line)$coefficients
print(coef[2])
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
Equation <- paste("y = ", coef[1], "x + ", coef[2])
Equation <- paste("y = ", coef[1], "x + ", coef[2])
print(Equation)
Equation <- paste("y = ", coef[1], "x +", coef[2], sep="")
print(Equation)
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
Equation <- paste("y = ", coef[1], "x +", coef[2], sep="")
print(Equation)
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
Equation <- paste("y = ", coef[2], "x +", coef[1], sep="")
print(Equation)
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
Equation <- paste("y = ", coef[2], "x + ", coef[1], sep="")
print(Equation)
fullInfo <- paste(R2, "   ", Equation)
title(sub = fullInfo)
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R-Squared:", R2)
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
Equation <- paste("y = ", coef[2], "x + ", coef[1], sep="")
fullInfo <- paste(R2, "   ", Equation)
title(sub = fullInfo)
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
best_fit_line <- lm(y_vals~x_vals)
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
R2str <- paste("R-Squared:", R2)
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
Equation <- paste("y = ", coef[2], "x + ", coef[1], sep="")
fullInfo <- paste(R2str, "   ", Equation)
title(sub = fullInfo)
file <- read.csv("mydata1.csv", header = TRUE, check.names = FALSE)
# Get col names
columnNames <- colnames(file)
# Get x and y
x_vals <- file[[1]]
y_vals <- file[[2]]
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# Grid
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# Legend
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
# Get best fit line
best_fit_line <- lm(y_vals~x_vals)
# Draw line
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
# Add label
R2str <- paste("R-Squared:", R2)
#Get coefficients
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
# Add label
Equation <- paste("y = ", coef[2], "x + ", coef[1], sep="")
## Concat both
fullInfo <- paste(R2str, "   ", Equation)
title(sub = fullInfo)
file <- read.csv("mydata1.csv", header = TRUE, check.names = FALSE)
# Get col names
columnNames <- colnames(file)
# Get x and y
x_vals <- file[[1]]
y_vals <- file[[2]]
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# Grid
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# Legend
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
# Get best fit line
best_fit_line <- lm(y_vals~x_vals)
# Draw line
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
# Add label
R2str <- paste("R-Squared:", R2)
#Get coefficients
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
# Add label
Equation <- paste("y = ", round(coef[2], digits = 3), "x + ", round(coef[1], digits = 3), sep="")
## Concat both
fullInfo <- paste(R2str, "   ", Equation)
title(sub = fullInfo)
file <- read.csv("mydata.csv", header = TRUE, check.names = FALSE)
# Get col names
columnNames <- colnames(file)
# Get x and y
x_vals <- file[[1]]
y_vals <- file[[2]]
# pch makes solid circles, cex is the size
plot(x_vals, y_vals,
xlab = columnNames[1],
ylab = columnNames[2],
pch = 16,
cex=1.2,
col="RED",
main = "SPRING POSITION PLOTTED AGAINST SPRING ENERGY")
# Grid
# NULL Aligns with numbers on axes, lty line type
grid(nx = NULL, ny = NULL, col = "lightgray", lty = 2,
lwd = par("lwd"), equilogs = TRUE)
# Legend
# no clue what most of this does
legend("topleft",
legend = c("Best Fit Line"),
col = c(rgb(0,0,0)),
pch = 20,
bty = "n",
pt.cex = 1,
cex = 1.2,
text.col = "black",
horiz = F,
inset = c(0, 0))
# Get best fit line
best_fit_line <- lm(y_vals~x_vals)
# Draw line
# lwd = thickness
abline(best_fit_line, lwd = 2)
# obtain R squared
R2 <- round(summary(best_fit_line)$r.square, digits = 5)
# Add label
R2str <- paste("R-Squared:", R2)
#Get coefficients
## possible issue if y-intercept is negative because
# + is hard-coded
coef <- summary(best_fit_line)$coefficients
# Add label
Equation <- paste("y = ", round(coef[2], digits = 3), "x + ", round(coef[1], digits = 3), sep="")
## Concat both
fullInfo <- paste(R2str, "   ", Equation)
title(sub = fullInfo)
